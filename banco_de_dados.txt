-- Criação do banco de dados
CREATE DATABASE IF NOT EXISTS tarefas_db;
USE tarefas_db;

-- Tabela Campus
CREATE TABLE IF NOT EXISTS campus (
    id_cam INT NOT NULL AUTO_INCREMENT,
    nome_cam VARCHAR(255) NOT NULL,
    PRIMARY KEY (id_cam)
);

-- Tabela Servidor
CREATE TABLE IF NOT EXISTS servidor (
    id_ser INT NOT NULL AUTO_INCREMENT,
    nome_ser VARCHAR(255) NOT NULL,
    cpf_ser VARCHAR(14) NOT NULL,
    siape_ser INT NOT NULL,
    PRIMARY KEY (id_ser)
);

-- Tabela Portaria
CREATE TABLE IF NOT EXISTS portaria (
    id_por INT NOT NULL AUTO_INCREMENT,
    titulo_por VARCHAR(255) NOT NULL,
    descricao_por TEXT NOT NULL,
    data_inicio_por DATE NOT NULL,
    data_termino_por DATE,
    local_por VARCHAR(255) NOT NULL,
    responsavel_por VARCHAR(255) NOT NULL,
    PRIMARY KEY (id_por)
);

-- Tabela Cargo
CREATE TABLE IF NOT EXISTS cargo (
    id_car INT NOT NULL AUTO_INCREMENT,
    nome_car VARCHAR(255) NOT NULL,
    descricao_car TEXT NOT NULL,
    salario_base_car DECIMAL(10, 2) NOT NULL,
    valor_beneficio_car DECIMAL(10, 2),
    valor_bonus_car DECIMAL(10, 2),
    PRIMARY KEY (id_car)
);

-- Tabela Reunião
CREATE TABLE IF NOT EXISTS reuniao (
    id_reu INT NOT NULL AUTO_INCREMENT,
    titulo_reu VARCHAR(255) NOT NULL,
    descricao_reu TEXT NOT NULL,
    data_reu DATE NOT NULL,
    local_reu VARCHAR(255) NOT NULL,
    responsavel_reu VARCHAR(255) NOT NULL,
    setor_id_reu INT,
    PRIMARY KEY (id_reu)
);

-- Tabela Disciplina
CREATE TABLE IF NOT EXISTS disciplina (
    id_dis INT NOT NULL AUTO_INCREMENT,
    nome_dis VARCHAR(255) NOT NULL,
    codigo_dis VARCHAR(50) NOT NULL,
    carga_horaria_dis INT NOT NULL,
    PRIMARY KEY (id_dis)
);

-- Tabela Setor
CREATE TABLE IF NOT EXISTS setor (
    id_set INT NOT NULL AUTO_INCREMENT,
    nome_set VARCHAR(255) NOT NULL,
    descricao_set TEXT NOT NULL,
    responsavel_id_set INT,
    setor_pai_id_set INT,
    PRIMARY KEY (id_set),
    FOREIGN KEY (responsavel_id_set) REFERENCES servidor(id_ser),
    FOREIGN KEY (setor_pai_id_set) REFERENCES setor(id_set)
);

-- Tabela User
CREATE TABLE IF NOT EXISTS user (
    id_usr INT NOT NULL AUTO_INCREMENT,
    nome_usr VARCHAR(255) NOT NULL,
    email_usr VARCHAR(255) NOT NULL UNIQUE,
    senha_usr VARCHAR(255) NOT NULL,
    cargo_usr VARCHAR(255),
    PRIMARY KEY (id_usr)
);

-- Tabela Aluno
CREATE TABLE IF NOT EXISTS aluno (
    id_alu INT NOT NULL AUTO_INCREMENT,
    nome_alu VARCHAR(255) NOT NULL,
    cpf_alu VARCHAR(14) NOT NULL,
    data_nascimento_alu DATE NOT NULL,
    email_alu VARCHAR(255) NOT NULL,
    telefone_alu VARCHAR(15) NOT NULL,
    PRIMARY KEY (id_alu)
);

-- Tabela PortariaServidor (Relacionamento Muitos-para-Muitos entre Portaria e Servidor)
CREATE TABLE IF NOT EXISTS portaria_servidor (
    id_ps INT NOT NULL AUTO_INCREMENT,
    id_por_fk INT NOT NULL,
    id_ser_fk INT NOT NULL,
    PRIMARY KEY (id_ps),
    FOREIGN KEY (id_por_fk) REFERENCES portaria (id_por) ON DELETE CASCADE,
    FOREIGN KEY (id_ser_fk) REFERENCES servidor (id_ser) ON DELETE CASCADE
);


INSERT INTO cargo (nome_car, descricao_car, salario_base_car, valor_beneficio_car, valor_bonus_car) VALUES
    ('Analista de Sistemas', 'Responsável pelo desenvolvimento e manutenção de sistemas.', 5000.00, 800.00, 300.00),
    ('Professor', 'Responsável por ministrar aulas e orientar alunos.', 7000.00, 1000.00, 500.00),
    ('Administrador', 'Responsável pela gestão administrativa do campus.', 6000.00, 900.00, 400.00);
    
    INSERT INTO portaria (titulo_por, descricao_por, data_inicio_por, data_termino_por, local_por, responsavel_por) VALUES
    ('Portaria 001/2024', 'Portaria para alteração de carga horária docente.', '2024-01-15', '2024-01-20', 'Auditório Central', 'João Teixeira'),
    ('Portaria 002/2024', 'Designação de comissão para evento institucional.', '2024-02-10', '2024-02-15', 'Sala 101', 'Reinaldo Pereira'),
    ('Portaria 003/2024', 'Concessão de licença prêmio ao servidor.', '2024-03-05', NULL, 'Sala da Direção', 'Jefferson Antonio');
    
    INSERT INTO reuniao (titulo_reu, descricao_reu, data_reu, local_reu, responsavel_reu, setor_id_reu) VALUES
    ('Reunião de Planejamento', 'Reunião para planejamento do semestre letivo.', '2024-01-20', 'Sala 101', 'João Teixeira', 1),
    ('Reunião de Avaliação', 'Reunião para avaliação do desempenho docente.', '2024-02-15', 'Auditório Central', 'Reinaldo Pereira', 2),
    ('Reunião de Integração', 'Reunião para integração de novos servidores.', '2024-03-10', 'Sala de Reuniões', 'Mariana Costa', 3);
    
    INSERT INTO servidor (nome_ser, cpf_ser, siape_ser) VALUES
    ('João Teixeira', '123.456.789-00', 534534),
    ('Reinaldo Pereira', '987.654.321-00', 534538),
    ('Jefferson Antonio', '111.222.333-44', 123215);
    
    INSERT INTO setor (nome_set, descricao_set, responsavel_id_set, setor_pai_id_set) VALUES
    ('TI', 'Setor de Tecnologia da Informação.', 1, NULL),
    ('RH', 'Setor de Recursos Humanos.', 2, NULL),
    ('Financeiro', 'Setor Financeiro.', 3, NULL);
    
    INSERT INTO user (nome_usr, email_usr, senha_usr, cargo_usr) VALUES
    ('Admin', 'admin@ifro.edu.br', 'senha123', 'Administrador'),
    ('João Teixeira', 'joao@ifro.edu.br', 'senha456', 'Analista de Sistemas'),
    ('Reinaldo Pereira', 'reinaldo@ifro.edu.br', 'senha789', 'Professor');
    
    INSERT INTO aluno (nome_alu, cpf_alu, data_nascimento_alu, email_alu, telefone_alu) VALUES
    ('Maria Silva', '111.222.333-44', '2005-03-15', 'maria.silva@escola.com', '(69) 99200-0102'),
    ('João Oliveira', '555.666.777-88', '2006-07-22', 'joao.oliveira@escola.com', '(69) 99200-0203'),
    ('Ana Souza', '999.888.777-66', '2004-11-30', 'ana.souza@escola.com', '(69) 99200-0304');
    
    INSERT INTO disciplina (nome_dis, codigo_dis, carga_horaria_dis) VALUES
    ('Matemática', 'MAT101', 60),
    ('Português', 'POR202', 80),
    ('História', 'HIS303', 40);